services:
  nginx:
    build:
      # El contexto ahora es la raíz del proyecto
      context: ..
      dockerfile: docker/Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ../frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - tdc_network

  backend:
    build:
      # El contexto también es la raíz del proyecto
      context: ..
      dockerfile: docker/Dockerfile.backend
    environment:
      DB_HOST: mariadb
      DB_USER: rodrigo
      DB_PASSWORD: desa8102test
      DB_NAME: tdc_db
      PORT: 3000
    ports:
      - "3000:3000"
    networks:
      - tdc_network
    volumes:
      # ¡ESTA ES LA RUTA CORREGIDA Y ROBUSTA!
      # La ruta es relativa al archivo docker-compose.yml.
      # Para apuntar a la carpeta `backend` en la raíz, usamos `../backend`.
      - ../backend:/app
      # Este volumen anónimo sigue siendo crucial para proteger node_modules.
      - /app/node_modules

  mariadb:
    image: mariadb:10.6
    ports:
      - "3306:3306" # Mapea el puerto 3306 del host al 3306 del contenedor
    environment:
      MARIADB_ROOT_PASSWORD: sys81902root # Tus nuevos valores
      MARIADB_USER: rodrigo # Tus nuevos valores
      MARIADB_PASSWORD: desa8102test # Tus nuevos valores
      MARIADB_DATABASE: tdc_db
    volumes:
      - mariadb_data:/var/lib/mysql
      # --- AÑADE ESTAS LÍNEAS ---
      # Monta los scripts de inicialización en una carpeta especial que se ejecuta al inicio
      - ../database/schema.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ../database/seed.sql:/docker-entrypoint-initdb.d/2_seed.sql
      # Monta los archivos CSV en una carpeta accesible para LOAD DATA INFILE
      - ../database/seeds:/var/lib/mysql-files
    networks:
      - tdc_network

# Definición de redes
networks:
  tdc_network:
    driver: bridge

# Definición de volúmenes persistentes
volumes:
  mariadb_data:
